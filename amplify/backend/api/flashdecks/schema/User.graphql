#
# The user links
# The `getUser` query is defined by the root Query, rather than the @model directive,
# as it hooks into a custom Lambda Resolver which adds the user from Cognito if it doesn't exist.
#
type User
  @model(
    queries: { get: null, list: null }, # Don't generate getUser, use custom implementation. No listUsers.
    mutations: { create: null, delete: null }, # No create or delete.
    subscriptions: null  # No subscriptions.
  )
  @auth(rules: [
    { allow: owner, operations: [update, delete], ownerField: "id", identityClaim: "sub" } # Link owner by Cognito Subject. Only owner can update.
  ])
{
  id: ID!
  displayName: String!
  # TODO favouriteCards @connection Not able to modify (create setFavouriteCards Mutator which also updates the Card's popularity)
  # TODO favouriteDecks @connection Not able to modify (create setFavouriteDecks Mutator which also updates the Deck's popularity)
}
